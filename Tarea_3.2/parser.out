Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID DOUBLEDOT program_2nd
Rule 2     program_2nd -> bloque
Rule 3     program_2nd -> vars bloque
Rule 4     vars -> VAR vars_2nd
Rule 5     vars_2nd -> ID COMMA vars_2nd
Rule 6     vars_2nd -> ID DOUBLEDOT tipo SEMICOLON vars_3rd
Rule 7     vars_3rd -> empty
Rule 8     vars_3rd -> vars_2nd
Rule 9     tipo -> INTEGER
Rule 10    tipo -> FLOATING
Rule 11    bloque -> OPENKEY estatuto CLOSEKEY
Rule 12    bloque -> OPENKEY empty CLOSEKEY
Rule 13    estatuto -> estatuto_2nd estatuto_3rd
Rule 14    estatuto_2nd -> asignacion
Rule 15    estatuto_2nd -> condicion
Rule 16    estatuto_2nd -> escritura
Rule 17    estatuto_3rd -> empty
Rule 18    estatuto_3rd -> estatuto
Rule 19    asignacion -> ID EQUAL expresion SEMICOLON
Rule 20    expresion -> exp expresion_2nd
Rule 21    expresion_2nd -> empty
Rule 22    expresion_2nd -> LESSTHAN exp
Rule 23    expresion_2nd -> MORETHAN exp
Rule 24    expresion_2nd -> DIFFERENT exp
Rule 25    escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON
Rule 26    escritura_2nd -> expresion escritura_3rd
Rule 27    escritura_2nd -> CTE_STRING escritura_3rd
Rule 28    escritura_3rd -> empty
Rule 29    escritura_3rd -> COMMA escritura_2nd
Rule 30    condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
Rule 31    condicion_2nd -> empty
Rule 32    condicion_2nd -> ELSE bloque
Rule 33    exp -> termino exp_2nd
Rule 34    exp_2nd -> empty
Rule 35    exp_2nd -> PLUS exp
Rule 36    exp_2nd -> MINUS exp
Rule 37    termino -> factor termino_2nd
Rule 38    termino_2nd -> MULTIPLY termino
Rule 39    termino_2nd -> DIVIDE termino
Rule 40    termino_2nd -> empty
Rule 41    factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS
Rule 42    factor -> var_cte
Rule 43    factor -> PLUS var_cte
Rule 44    factor -> MINUS var_cte
Rule 45    var_cte -> ID
Rule 46    var_cte -> CTE_INT
Rule 47    var_cte -> CTE_FLOAT
Rule 48    empty -> <empty>

Terminals, with rules where they appear

CLOSEKEY             : 11 12
CLOSEPARENTHESIS     : 25 30 41
COMMA                : 5 29
CTE_FLOAT            : 47
CTE_INT              : 46
CTE_STRING           : 27
DIFFERENT            : 24
DIVIDE               : 39
DOUBLEDOT            : 1 6
ELSE                 : 32
EQUAL                : 19
FLOATING             : 10
ID                   : 1 5 6 19 45
IF                   : 30
INTEGER              : 9
LESSTHAN             : 22
MINUS                : 36 44
MORETHAN             : 23
MULTIPLY             : 38
OPENKEY              : 11 12
OPENPARENTHESIS      : 25 30 41
PLUS                 : 35 43
PRINT                : 25
PROGRAM              : 1
SEMICOLON            : 6 19 25 30
VAR                  : 4
error                : 

Nonterminals, with rules where they appear

asignacion           : 14
bloque               : 2 3 30 32
condicion            : 15
condicion_2nd        : 30
empty                : 7 12 17 21 28 31 34 40
escritura            : 16
escritura_2nd        : 25 29
escritura_3rd        : 26 27
estatuto             : 11 18
estatuto_2nd         : 13
estatuto_3rd         : 13
exp                  : 20 22 23 24 35 36
exp_2nd              : 33
expresion            : 19 26 30 41
expresion_2nd        : 20
factor               : 37
program              : 0
program_2nd          : 1
termino              : 33 38 39
termino_2nd          : 37
tipo                 : 6
var_cte              : 42 43 44
vars                 : 3
vars_2nd             : 4 5 8
vars_3rd             : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID DOUBLEDOT program_2nd

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID DOUBLEDOT program_2nd

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . DOUBLEDOT program_2nd

    DOUBLEDOT       shift and go to state 4


state 4

    (1) program -> PROGRAM ID DOUBLEDOT . program_2nd
    (2) program_2nd -> . bloque
    (3) program_2nd -> . vars bloque
    (11) bloque -> . OPENKEY estatuto CLOSEKEY
    (12) bloque -> . OPENKEY empty CLOSEKEY
    (4) vars -> . VAR vars_2nd

    OPENKEY         shift and go to state 8
    VAR             shift and go to state 9

    program_2nd                    shift and go to state 5
    bloque                         shift and go to state 6
    vars                           shift and go to state 7

state 5

    (1) program -> PROGRAM ID DOUBLEDOT program_2nd .

    $end            reduce using rule 1 (program -> PROGRAM ID DOUBLEDOT program_2nd .)


state 6

    (2) program_2nd -> bloque .

    $end            reduce using rule 2 (program_2nd -> bloque .)


state 7

    (3) program_2nd -> vars . bloque
    (11) bloque -> . OPENKEY estatuto CLOSEKEY
    (12) bloque -> . OPENKEY empty CLOSEKEY

    OPENKEY         shift and go to state 8

    bloque                         shift and go to state 10

state 8

    (11) bloque -> OPENKEY . estatuto CLOSEKEY
    (12) bloque -> OPENKEY . empty CLOSEKEY
    (13) estatuto -> . estatuto_2nd estatuto_3rd
    (48) empty -> .
    (14) estatuto_2nd -> . asignacion
    (15) estatuto_2nd -> . condicion
    (16) estatuto_2nd -> . escritura
    (19) asignacion -> . ID EQUAL expresion SEMICOLON
    (30) condicion -> . IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
    (25) escritura -> . PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON

    CLOSEKEY        reduce using rule 48 (empty -> .)
    ID              shift and go to state 17
    IF              shift and go to state 18
    PRINT           shift and go to state 19

    estatuto                       shift and go to state 11
    empty                          shift and go to state 12
    estatuto_2nd                   shift and go to state 13
    asignacion                     shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16

state 9

    (4) vars -> VAR . vars_2nd
    (5) vars_2nd -> . ID COMMA vars_2nd
    (6) vars_2nd -> . ID DOUBLEDOT tipo SEMICOLON vars_3rd

    ID              shift and go to state 21

    vars_2nd                       shift and go to state 20

state 10

    (3) program_2nd -> vars bloque .

    $end            reduce using rule 3 (program_2nd -> vars bloque .)


state 11

    (11) bloque -> OPENKEY estatuto . CLOSEKEY

    CLOSEKEY        shift and go to state 22


state 12

    (12) bloque -> OPENKEY empty . CLOSEKEY

    CLOSEKEY        shift and go to state 23


state 13

    (13) estatuto -> estatuto_2nd . estatuto_3rd
    (17) estatuto_3rd -> . empty
    (18) estatuto_3rd -> . estatuto
    (48) empty -> .
    (13) estatuto -> . estatuto_2nd estatuto_3rd
    (14) estatuto_2nd -> . asignacion
    (15) estatuto_2nd -> . condicion
    (16) estatuto_2nd -> . escritura
    (19) asignacion -> . ID EQUAL expresion SEMICOLON
    (30) condicion -> . IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
    (25) escritura -> . PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON

    CLOSEKEY        reduce using rule 48 (empty -> .)
    ID              shift and go to state 17
    IF              shift and go to state 18
    PRINT           shift and go to state 19

    estatuto_2nd                   shift and go to state 13
    estatuto_3rd                   shift and go to state 24
    empty                          shift and go to state 25
    estatuto                       shift and go to state 26
    asignacion                     shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16

state 14

    (14) estatuto_2nd -> asignacion .

    ID              reduce using rule 14 (estatuto_2nd -> asignacion .)
    IF              reduce using rule 14 (estatuto_2nd -> asignacion .)
    PRINT           reduce using rule 14 (estatuto_2nd -> asignacion .)
    CLOSEKEY        reduce using rule 14 (estatuto_2nd -> asignacion .)


state 15

    (15) estatuto_2nd -> condicion .

    ID              reduce using rule 15 (estatuto_2nd -> condicion .)
    IF              reduce using rule 15 (estatuto_2nd -> condicion .)
    PRINT           reduce using rule 15 (estatuto_2nd -> condicion .)
    CLOSEKEY        reduce using rule 15 (estatuto_2nd -> condicion .)


state 16

    (16) estatuto_2nd -> escritura .

    ID              reduce using rule 16 (estatuto_2nd -> escritura .)
    IF              reduce using rule 16 (estatuto_2nd -> escritura .)
    PRINT           reduce using rule 16 (estatuto_2nd -> escritura .)
    CLOSEKEY        reduce using rule 16 (estatuto_2nd -> escritura .)


state 17

    (19) asignacion -> ID . EQUAL expresion SEMICOLON

    EQUAL           shift and go to state 27


state 18

    (30) condicion -> IF . OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON

    OPENPARENTHESIS shift and go to state 28


state 19

    (25) escritura -> PRINT . OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON

    OPENPARENTHESIS shift and go to state 29


state 20

    (4) vars -> VAR vars_2nd .

    OPENKEY         reduce using rule 4 (vars -> VAR vars_2nd .)


state 21

    (5) vars_2nd -> ID . COMMA vars_2nd
    (6) vars_2nd -> ID . DOUBLEDOT tipo SEMICOLON vars_3rd

    COMMA           shift and go to state 30
    DOUBLEDOT       shift and go to state 31


state 22

    (11) bloque -> OPENKEY estatuto CLOSEKEY .

    $end            reduce using rule 11 (bloque -> OPENKEY estatuto CLOSEKEY .)
    ELSE            reduce using rule 11 (bloque -> OPENKEY estatuto CLOSEKEY .)
    SEMICOLON       reduce using rule 11 (bloque -> OPENKEY estatuto CLOSEKEY .)


state 23

    (12) bloque -> OPENKEY empty CLOSEKEY .

    $end            reduce using rule 12 (bloque -> OPENKEY empty CLOSEKEY .)
    ELSE            reduce using rule 12 (bloque -> OPENKEY empty CLOSEKEY .)
    SEMICOLON       reduce using rule 12 (bloque -> OPENKEY empty CLOSEKEY .)


state 24

    (13) estatuto -> estatuto_2nd estatuto_3rd .

    CLOSEKEY        reduce using rule 13 (estatuto -> estatuto_2nd estatuto_3rd .)


state 25

    (17) estatuto_3rd -> empty .

    CLOSEKEY        reduce using rule 17 (estatuto_3rd -> empty .)


state 26

    (18) estatuto_3rd -> estatuto .

    CLOSEKEY        reduce using rule 18 (estatuto_3rd -> estatuto .)


state 27

    (19) asignacion -> ID EQUAL . expresion SEMICOLON
    (20) expresion -> . exp expresion_2nd
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expresion                      shift and go to state 33
    exp                            shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 28

    (30) condicion -> IF OPENPARENTHESIS . expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
    (20) expresion -> . exp expresion_2nd
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expresion                      shift and go to state 43
    exp                            shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 29

    (25) escritura -> PRINT OPENPARENTHESIS . escritura_2nd CLOSEPARENTHESIS SEMICOLON
    (26) escritura_2nd -> . expresion escritura_3rd
    (27) escritura_2nd -> . CTE_STRING escritura_3rd
    (20) expresion -> . exp expresion_2nd
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    CTE_STRING      shift and go to state 46
    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    escritura_2nd                  shift and go to state 44
    expresion                      shift and go to state 45
    exp                            shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 30

    (5) vars_2nd -> ID COMMA . vars_2nd
    (5) vars_2nd -> . ID COMMA vars_2nd
    (6) vars_2nd -> . ID DOUBLEDOT tipo SEMICOLON vars_3rd

    ID              shift and go to state 21

    vars_2nd                       shift and go to state 47

state 31

    (6) vars_2nd -> ID DOUBLEDOT . tipo SEMICOLON vars_3rd
    (9) tipo -> . INTEGER
    (10) tipo -> . FLOATING

    INTEGER         shift and go to state 49
    FLOATING        shift and go to state 50

    tipo                           shift and go to state 48

state 32

    (45) var_cte -> ID .

    MULTIPLY        reduce using rule 45 (var_cte -> ID .)
    DIVIDE          reduce using rule 45 (var_cte -> ID .)
    PLUS            reduce using rule 45 (var_cte -> ID .)
    MINUS           reduce using rule 45 (var_cte -> ID .)
    LESSTHAN        reduce using rule 45 (var_cte -> ID .)
    MORETHAN        reduce using rule 45 (var_cte -> ID .)
    DIFFERENT       reduce using rule 45 (var_cte -> ID .)
    SEMICOLON       reduce using rule 45 (var_cte -> ID .)
    CLOSEPARENTHESIS reduce using rule 45 (var_cte -> ID .)
    COMMA           reduce using rule 45 (var_cte -> ID .)


state 33

    (19) asignacion -> ID EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 51


state 34

    (20) expresion -> exp . expresion_2nd
    (21) expresion_2nd -> . empty
    (22) expresion_2nd -> . LESSTHAN exp
    (23) expresion_2nd -> . MORETHAN exp
    (24) expresion_2nd -> . DIFFERENT exp
    (48) empty -> .

    LESSTHAN        shift and go to state 54
    MORETHAN        shift and go to state 55
    DIFFERENT       shift and go to state 56
    SEMICOLON       reduce using rule 48 (empty -> .)
    CLOSEPARENTHESIS reduce using rule 48 (empty -> .)
    COMMA           reduce using rule 48 (empty -> .)

    expresion_2nd                  shift and go to state 52
    empty                          shift and go to state 53

state 35

    (33) exp -> termino . exp_2nd
    (34) exp_2nd -> . empty
    (35) exp_2nd -> . PLUS exp
    (36) exp_2nd -> . MINUS exp
    (48) empty -> .

    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    LESSTHAN        reduce using rule 48 (empty -> .)
    MORETHAN        reduce using rule 48 (empty -> .)
    DIFFERENT       reduce using rule 48 (empty -> .)
    SEMICOLON       reduce using rule 48 (empty -> .)
    CLOSEPARENTHESIS reduce using rule 48 (empty -> .)
    COMMA           reduce using rule 48 (empty -> .)

    exp_2nd                        shift and go to state 57
    empty                          shift and go to state 58

state 36

    (37) termino -> factor . termino_2nd
    (38) termino_2nd -> . MULTIPLY termino
    (39) termino_2nd -> . DIVIDE termino
    (40) termino_2nd -> . empty
    (48) empty -> .

    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    PLUS            reduce using rule 48 (empty -> .)
    MINUS           reduce using rule 48 (empty -> .)
    LESSTHAN        reduce using rule 48 (empty -> .)
    MORETHAN        reduce using rule 48 (empty -> .)
    DIFFERENT       reduce using rule 48 (empty -> .)
    SEMICOLON       reduce using rule 48 (empty -> .)
    CLOSEPARENTHESIS reduce using rule 48 (empty -> .)
    COMMA           reduce using rule 48 (empty -> .)

    termino_2nd                    shift and go to state 61
    empty                          shift and go to state 64

state 37

    (41) factor -> OPENPARENTHESIS . expresion CLOSEPARENTHESIS
    (20) expresion -> . exp expresion_2nd
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expresion                      shift and go to state 65
    exp                            shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 38

    (42) factor -> var_cte .

    MULTIPLY        reduce using rule 42 (factor -> var_cte .)
    DIVIDE          reduce using rule 42 (factor -> var_cte .)
    PLUS            reduce using rule 42 (factor -> var_cte .)
    MINUS           reduce using rule 42 (factor -> var_cte .)
    LESSTHAN        reduce using rule 42 (factor -> var_cte .)
    MORETHAN        reduce using rule 42 (factor -> var_cte .)
    DIFFERENT       reduce using rule 42 (factor -> var_cte .)
    SEMICOLON       reduce using rule 42 (factor -> var_cte .)
    CLOSEPARENTHESIS reduce using rule 42 (factor -> var_cte .)
    COMMA           reduce using rule 42 (factor -> var_cte .)


state 39

    (43) factor -> PLUS . var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    var_cte                        shift and go to state 66

state 40

    (44) factor -> MINUS . var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    var_cte                        shift and go to state 67

state 41

    (46) var_cte -> CTE_INT .

    MULTIPLY        reduce using rule 46 (var_cte -> CTE_INT .)
    DIVIDE          reduce using rule 46 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 46 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 46 (var_cte -> CTE_INT .)
    LESSTHAN        reduce using rule 46 (var_cte -> CTE_INT .)
    MORETHAN        reduce using rule 46 (var_cte -> CTE_INT .)
    DIFFERENT       reduce using rule 46 (var_cte -> CTE_INT .)
    SEMICOLON       reduce using rule 46 (var_cte -> CTE_INT .)
    CLOSEPARENTHESIS reduce using rule 46 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 46 (var_cte -> CTE_INT .)


state 42

    (47) var_cte -> CTE_FLOAT .

    MULTIPLY        reduce using rule 47 (var_cte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 47 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 47 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 47 (var_cte -> CTE_FLOAT .)
    LESSTHAN        reduce using rule 47 (var_cte -> CTE_FLOAT .)
    MORETHAN        reduce using rule 47 (var_cte -> CTE_FLOAT .)
    DIFFERENT       reduce using rule 47 (var_cte -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 47 (var_cte -> CTE_FLOAT .)
    CLOSEPARENTHESIS reduce using rule 47 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 47 (var_cte -> CTE_FLOAT .)


state 43

    (30) condicion -> IF OPENPARENTHESIS expresion . CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON

    CLOSEPARENTHESIS shift and go to state 68


state 44

    (25) escritura -> PRINT OPENPARENTHESIS escritura_2nd . CLOSEPARENTHESIS SEMICOLON

    CLOSEPARENTHESIS shift and go to state 69


state 45

    (26) escritura_2nd -> expresion . escritura_3rd
    (28) escritura_3rd -> . empty
    (29) escritura_3rd -> . COMMA escritura_2nd
    (48) empty -> .

    COMMA           shift and go to state 72
    CLOSEPARENTHESIS reduce using rule 48 (empty -> .)

    escritura_3rd                  shift and go to state 70
    empty                          shift and go to state 71

state 46

    (27) escritura_2nd -> CTE_STRING . escritura_3rd
    (28) escritura_3rd -> . empty
    (29) escritura_3rd -> . COMMA escritura_2nd
    (48) empty -> .

    COMMA           shift and go to state 72
    CLOSEPARENTHESIS reduce using rule 48 (empty -> .)

    escritura_3rd                  shift and go to state 73
    empty                          shift and go to state 71

state 47

    (5) vars_2nd -> ID COMMA vars_2nd .

    OPENKEY         reduce using rule 5 (vars_2nd -> ID COMMA vars_2nd .)


state 48

    (6) vars_2nd -> ID DOUBLEDOT tipo . SEMICOLON vars_3rd

    SEMICOLON       shift and go to state 74


state 49

    (9) tipo -> INTEGER .

    SEMICOLON       reduce using rule 9 (tipo -> INTEGER .)


state 50

    (10) tipo -> FLOATING .

    SEMICOLON       reduce using rule 10 (tipo -> FLOATING .)


state 51

    (19) asignacion -> ID EQUAL expresion SEMICOLON .

    ID              reduce using rule 19 (asignacion -> ID EQUAL expresion SEMICOLON .)
    IF              reduce using rule 19 (asignacion -> ID EQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 19 (asignacion -> ID EQUAL expresion SEMICOLON .)
    CLOSEKEY        reduce using rule 19 (asignacion -> ID EQUAL expresion SEMICOLON .)


state 52

    (20) expresion -> exp expresion_2nd .

    SEMICOLON       reduce using rule 20 (expresion -> exp expresion_2nd .)
    CLOSEPARENTHESIS reduce using rule 20 (expresion -> exp expresion_2nd .)
    COMMA           reduce using rule 20 (expresion -> exp expresion_2nd .)


state 53

    (21) expresion_2nd -> empty .

    SEMICOLON       reduce using rule 21 (expresion_2nd -> empty .)
    CLOSEPARENTHESIS reduce using rule 21 (expresion_2nd -> empty .)
    COMMA           reduce using rule 21 (expresion_2nd -> empty .)


state 54

    (22) expresion_2nd -> LESSTHAN . exp
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 75
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 55

    (23) expresion_2nd -> MORETHAN . exp
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 76
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 56

    (24) expresion_2nd -> DIFFERENT . exp
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 77
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 57

    (33) exp -> termino exp_2nd .

    LESSTHAN        reduce using rule 33 (exp -> termino exp_2nd .)
    MORETHAN        reduce using rule 33 (exp -> termino exp_2nd .)
    DIFFERENT       reduce using rule 33 (exp -> termino exp_2nd .)
    SEMICOLON       reduce using rule 33 (exp -> termino exp_2nd .)
    CLOSEPARENTHESIS reduce using rule 33 (exp -> termino exp_2nd .)
    COMMA           reduce using rule 33 (exp -> termino exp_2nd .)


state 58

    (34) exp_2nd -> empty .

    LESSTHAN        reduce using rule 34 (exp_2nd -> empty .)
    MORETHAN        reduce using rule 34 (exp_2nd -> empty .)
    DIFFERENT       reduce using rule 34 (exp_2nd -> empty .)
    SEMICOLON       reduce using rule 34 (exp_2nd -> empty .)
    CLOSEPARENTHESIS reduce using rule 34 (exp_2nd -> empty .)
    COMMA           reduce using rule 34 (exp_2nd -> empty .)


state 59

    (35) exp_2nd -> PLUS . exp
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 78
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 60

    (36) exp_2nd -> MINUS . exp
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 79
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 61

    (37) termino -> factor termino_2nd .

    PLUS            reduce using rule 37 (termino -> factor termino_2nd .)
    MINUS           reduce using rule 37 (termino -> factor termino_2nd .)
    LESSTHAN        reduce using rule 37 (termino -> factor termino_2nd .)
    MORETHAN        reduce using rule 37 (termino -> factor termino_2nd .)
    DIFFERENT       reduce using rule 37 (termino -> factor termino_2nd .)
    SEMICOLON       reduce using rule 37 (termino -> factor termino_2nd .)
    CLOSEPARENTHESIS reduce using rule 37 (termino -> factor termino_2nd .)
    COMMA           reduce using rule 37 (termino -> factor termino_2nd .)


state 62

    (38) termino_2nd -> MULTIPLY . termino
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    termino                        shift and go to state 80
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 63

    (39) termino_2nd -> DIVIDE . termino
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    termino                        shift and go to state 81
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 64

    (40) termino_2nd -> empty .

    PLUS            reduce using rule 40 (termino_2nd -> empty .)
    MINUS           reduce using rule 40 (termino_2nd -> empty .)
    LESSTHAN        reduce using rule 40 (termino_2nd -> empty .)
    MORETHAN        reduce using rule 40 (termino_2nd -> empty .)
    DIFFERENT       reduce using rule 40 (termino_2nd -> empty .)
    SEMICOLON       reduce using rule 40 (termino_2nd -> empty .)
    CLOSEPARENTHESIS reduce using rule 40 (termino_2nd -> empty .)
    COMMA           reduce using rule 40 (termino_2nd -> empty .)


state 65

    (41) factor -> OPENPARENTHESIS expresion . CLOSEPARENTHESIS

    CLOSEPARENTHESIS shift and go to state 82


state 66

    (43) factor -> PLUS var_cte .

    MULTIPLY        reduce using rule 43 (factor -> PLUS var_cte .)
    DIVIDE          reduce using rule 43 (factor -> PLUS var_cte .)
    PLUS            reduce using rule 43 (factor -> PLUS var_cte .)
    MINUS           reduce using rule 43 (factor -> PLUS var_cte .)
    LESSTHAN        reduce using rule 43 (factor -> PLUS var_cte .)
    MORETHAN        reduce using rule 43 (factor -> PLUS var_cte .)
    DIFFERENT       reduce using rule 43 (factor -> PLUS var_cte .)
    SEMICOLON       reduce using rule 43 (factor -> PLUS var_cte .)
    CLOSEPARENTHESIS reduce using rule 43 (factor -> PLUS var_cte .)
    COMMA           reduce using rule 43 (factor -> PLUS var_cte .)


state 67

    (44) factor -> MINUS var_cte .

    MULTIPLY        reduce using rule 44 (factor -> MINUS var_cte .)
    DIVIDE          reduce using rule 44 (factor -> MINUS var_cte .)
    PLUS            reduce using rule 44 (factor -> MINUS var_cte .)
    MINUS           reduce using rule 44 (factor -> MINUS var_cte .)
    LESSTHAN        reduce using rule 44 (factor -> MINUS var_cte .)
    MORETHAN        reduce using rule 44 (factor -> MINUS var_cte .)
    DIFFERENT       reduce using rule 44 (factor -> MINUS var_cte .)
    SEMICOLON       reduce using rule 44 (factor -> MINUS var_cte .)
    CLOSEPARENTHESIS reduce using rule 44 (factor -> MINUS var_cte .)
    COMMA           reduce using rule 44 (factor -> MINUS var_cte .)


state 68

    (30) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS . bloque condicion_2nd SEMICOLON
    (11) bloque -> . OPENKEY estatuto CLOSEKEY
    (12) bloque -> . OPENKEY empty CLOSEKEY

    OPENKEY         shift and go to state 8

    bloque                         shift and go to state 83

state 69

    (25) escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 84


state 70

    (26) escritura_2nd -> expresion escritura_3rd .

    CLOSEPARENTHESIS reduce using rule 26 (escritura_2nd -> expresion escritura_3rd .)


state 71

    (28) escritura_3rd -> empty .

    CLOSEPARENTHESIS reduce using rule 28 (escritura_3rd -> empty .)


state 72

    (29) escritura_3rd -> COMMA . escritura_2nd
    (26) escritura_2nd -> . expresion escritura_3rd
    (27) escritura_2nd -> . CTE_STRING escritura_3rd
    (20) expresion -> . exp expresion_2nd
    (33) exp -> . termino exp_2nd
    (37) termino -> . factor termino_2nd
    (41) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (42) factor -> . var_cte
    (43) factor -> . PLUS var_cte
    (44) factor -> . MINUS var_cte
    (45) var_cte -> . ID
    (46) var_cte -> . CTE_INT
    (47) var_cte -> . CTE_FLOAT

    CTE_STRING      shift and go to state 46
    OPENPARENTHESIS shift and go to state 37
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    escritura_2nd                  shift and go to state 85
    expresion                      shift and go to state 45
    exp                            shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 36
    var_cte                        shift and go to state 38

state 73

    (27) escritura_2nd -> CTE_STRING escritura_3rd .

    CLOSEPARENTHESIS reduce using rule 27 (escritura_2nd -> CTE_STRING escritura_3rd .)


state 74

    (6) vars_2nd -> ID DOUBLEDOT tipo SEMICOLON . vars_3rd
    (7) vars_3rd -> . empty
    (8) vars_3rd -> . vars_2nd
    (48) empty -> .
    (5) vars_2nd -> . ID COMMA vars_2nd
    (6) vars_2nd -> . ID DOUBLEDOT tipo SEMICOLON vars_3rd

    OPENKEY         reduce using rule 48 (empty -> .)
    ID              shift and go to state 21

    vars_3rd                       shift and go to state 86
    empty                          shift and go to state 87
    vars_2nd                       shift and go to state 88

state 75

    (22) expresion_2nd -> LESSTHAN exp .

    SEMICOLON       reduce using rule 22 (expresion_2nd -> LESSTHAN exp .)
    CLOSEPARENTHESIS reduce using rule 22 (expresion_2nd -> LESSTHAN exp .)
    COMMA           reduce using rule 22 (expresion_2nd -> LESSTHAN exp .)


state 76

    (23) expresion_2nd -> MORETHAN exp .

    SEMICOLON       reduce using rule 23 (expresion_2nd -> MORETHAN exp .)
    CLOSEPARENTHESIS reduce using rule 23 (expresion_2nd -> MORETHAN exp .)
    COMMA           reduce using rule 23 (expresion_2nd -> MORETHAN exp .)


state 77

    (24) expresion_2nd -> DIFFERENT exp .

    SEMICOLON       reduce using rule 24 (expresion_2nd -> DIFFERENT exp .)
    CLOSEPARENTHESIS reduce using rule 24 (expresion_2nd -> DIFFERENT exp .)
    COMMA           reduce using rule 24 (expresion_2nd -> DIFFERENT exp .)


state 78

    (35) exp_2nd -> PLUS exp .

    LESSTHAN        reduce using rule 35 (exp_2nd -> PLUS exp .)
    MORETHAN        reduce using rule 35 (exp_2nd -> PLUS exp .)
    DIFFERENT       reduce using rule 35 (exp_2nd -> PLUS exp .)
    SEMICOLON       reduce using rule 35 (exp_2nd -> PLUS exp .)
    CLOSEPARENTHESIS reduce using rule 35 (exp_2nd -> PLUS exp .)
    COMMA           reduce using rule 35 (exp_2nd -> PLUS exp .)


state 79

    (36) exp_2nd -> MINUS exp .

    LESSTHAN        reduce using rule 36 (exp_2nd -> MINUS exp .)
    MORETHAN        reduce using rule 36 (exp_2nd -> MINUS exp .)
    DIFFERENT       reduce using rule 36 (exp_2nd -> MINUS exp .)
    SEMICOLON       reduce using rule 36 (exp_2nd -> MINUS exp .)
    CLOSEPARENTHESIS reduce using rule 36 (exp_2nd -> MINUS exp .)
    COMMA           reduce using rule 36 (exp_2nd -> MINUS exp .)


state 80

    (38) termino_2nd -> MULTIPLY termino .

    PLUS            reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    MINUS           reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    LESSTHAN        reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    MORETHAN        reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    DIFFERENT       reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    SEMICOLON       reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    CLOSEPARENTHESIS reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    COMMA           reduce using rule 38 (termino_2nd -> MULTIPLY termino .)


state 81

    (39) termino_2nd -> DIVIDE termino .

    PLUS            reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    MINUS           reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    LESSTHAN        reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    MORETHAN        reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    DIFFERENT       reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    SEMICOLON       reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    CLOSEPARENTHESIS reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    COMMA           reduce using rule 39 (termino_2nd -> DIVIDE termino .)


state 82

    (41) factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .

    MULTIPLY        reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    DIVIDE          reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    PLUS            reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    MINUS           reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    LESSTHAN        reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    MORETHAN        reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    DIFFERENT       reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    SEMICOLON       reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    CLOSEPARENTHESIS reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    COMMA           reduce using rule 41 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)


state 83

    (30) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque . condicion_2nd SEMICOLON
    (31) condicion_2nd -> . empty
    (32) condicion_2nd -> . ELSE bloque
    (48) empty -> .

    ELSE            shift and go to state 91
    SEMICOLON       reduce using rule 48 (empty -> .)

    condicion_2nd                  shift and go to state 89
    empty                          shift and go to state 90

state 84

    (25) escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .

    ID              reduce using rule 25 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)
    IF              reduce using rule 25 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 25 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)
    CLOSEKEY        reduce using rule 25 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)


state 85

    (29) escritura_3rd -> COMMA escritura_2nd .

    CLOSEPARENTHESIS reduce using rule 29 (escritura_3rd -> COMMA escritura_2nd .)


state 86

    (6) vars_2nd -> ID DOUBLEDOT tipo SEMICOLON vars_3rd .

    OPENKEY         reduce using rule 6 (vars_2nd -> ID DOUBLEDOT tipo SEMICOLON vars_3rd .)


state 87

    (7) vars_3rd -> empty .

    OPENKEY         reduce using rule 7 (vars_3rd -> empty .)


state 88

    (8) vars_3rd -> vars_2nd .

    OPENKEY         reduce using rule 8 (vars_3rd -> vars_2nd .)


state 89

    (30) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd . SEMICOLON

    SEMICOLON       shift and go to state 92


state 90

    (31) condicion_2nd -> empty .

    SEMICOLON       reduce using rule 31 (condicion_2nd -> empty .)


state 91

    (32) condicion_2nd -> ELSE . bloque
    (11) bloque -> . OPENKEY estatuto CLOSEKEY
    (12) bloque -> . OPENKEY empty CLOSEKEY

    OPENKEY         shift and go to state 8

    bloque                         shift and go to state 93

state 92

    (30) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .

    ID              reduce using rule 30 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)
    IF              reduce using rule 30 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)
    PRINT           reduce using rule 30 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)
    CLOSEKEY        reduce using rule 30 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)


state 93

    (32) condicion_2nd -> ELSE bloque .

    SEMICOLON       reduce using rule 32 (condicion_2nd -> ELSE bloque .)

