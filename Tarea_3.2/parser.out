Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID DOUBLEDOT program_2nd
Rule 2     program_2nd -> bloque
Rule 3     program_2nd -> vars bloque
Rule 4     vars -> VAR vars_2nd
Rule 5     vars_2nd -> ID COMMA vars_2nd
Rule 6     vars_2nd -> ID DOUBLEDOT tipo SEMICOLON vars_3rd
Rule 7     vars_3rd -> empty
Rule 8     vars_3rd -> vars_2nd
Rule 9     tipo -> INTEGER
Rule 10    tipo -> FLOATING
Rule 11    bloque -> OPENKEY estatuto CLOSEKEY
Rule 12    estatuto -> estatuto_2nd estatuto_3rd
Rule 13    estatuto_2nd -> asignacion
Rule 14    estatuto_2nd -> condicion
Rule 15    estatuto_2nd -> escritura
Rule 16    estatuto_3rd -> empty
Rule 17    estatuto_3rd -> estatuto
Rule 18    asignacion -> ID EQUAL expresion SEMICOLON
Rule 19    expresion -> exp expresion_2nd
Rule 20    expresion_2nd -> empty
Rule 21    expresion_2nd -> LESSTHAN exp
Rule 22    expresion_2nd -> MORETHAN exp
Rule 23    expresion_2nd -> DIFFERENT exp
Rule 24    escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON
Rule 25    escritura_2nd -> expresion escritura_3rd
Rule 26    escritura_2nd -> CTE_STRING escritura_3rd
Rule 27    escritura_3rd -> empty
Rule 28    escritura_3rd -> COMMA escritura_2nd
Rule 29    condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
Rule 30    condicion_2nd -> empty
Rule 31    condicion_2nd -> ELSE bloque
Rule 32    exp -> termino exp_2nd
Rule 33    exp_2nd -> empty
Rule 34    exp_2nd -> PLUS exp
Rule 35    exp_2nd -> MINUS exp
Rule 36    termino -> factor termino_2nd
Rule 37    termino_2nd -> empty
Rule 38    termino_2nd -> MULTIPLY termino
Rule 39    termino_2nd -> DIVIDE termino
Rule 40    factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS
Rule 41    factor -> var_cte
Rule 42    factor -> PLUS var_cte
Rule 43    factor -> MINUS var_cte
Rule 44    var_cte -> ID
Rule 45    var_cte -> CTE_INT
Rule 46    var_cte -> CTE_FLOAT
Rule 47    empty -> <empty>

Terminals, with rules where they appear

CLOSEKEY             : 11
CLOSEPARENTHESIS     : 24 29 40
COMMA                : 5 28
CTE_FLOAT            : 46
CTE_INT              : 45
CTE_STRING           : 26
DIFFERENT            : 23
DIVIDE               : 39
DOUBLEDOT            : 1 6
ELSE                 : 31
EQUAL                : 18
FLOATING             : 10
ID                   : 1 5 6 18 44
IF                   : 29
INTEGER              : 9
LESSTHAN             : 21
MINUS                : 35 43
MORETHAN             : 22
MULTIPLY             : 38
OPENKEY              : 11
OPENPARENTHESIS      : 24 29 40
PLUS                 : 34 42
PRINT                : 24
PROGRAM              : 1
SEMICOLON            : 6 18 24 29
VAR                  : 4
error                : 

Nonterminals, with rules where they appear

asignacion           : 13
bloque               : 2 3 29 31
condicion            : 14
condicion_2nd        : 29
empty                : 7 16 20 27 30 33 37
escritura            : 15
escritura_2nd        : 24 28
escritura_3rd        : 25 26
estatuto             : 11 17
estatuto_2nd         : 12
estatuto_3rd         : 12
exp                  : 19 21 22 23 34 35
exp_2nd              : 32
expresion            : 18 25 29 40
expresion_2nd        : 19
factor               : 36
program              : 0
program_2nd          : 1
termino              : 32 38 39
termino_2nd          : 36
tipo                 : 6
var_cte              : 41 42 43
vars                 : 3
vars_2nd             : 4 5 8
vars_3rd             : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID DOUBLEDOT program_2nd

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID DOUBLEDOT program_2nd

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . DOUBLEDOT program_2nd

    DOUBLEDOT       shift and go to state 4


state 4

    (1) program -> PROGRAM ID DOUBLEDOT . program_2nd
    (2) program_2nd -> . bloque
    (3) program_2nd -> . vars bloque
    (11) bloque -> . OPENKEY estatuto CLOSEKEY
    (4) vars -> . VAR vars_2nd

    OPENKEY         shift and go to state 8
    VAR             shift and go to state 9

    program_2nd                    shift and go to state 5
    bloque                         shift and go to state 6
    vars                           shift and go to state 7

state 5

    (1) program -> PROGRAM ID DOUBLEDOT program_2nd .

    $end            reduce using rule 1 (program -> PROGRAM ID DOUBLEDOT program_2nd .)


state 6

    (2) program_2nd -> bloque .

    $end            reduce using rule 2 (program_2nd -> bloque .)


state 7

    (3) program_2nd -> vars . bloque
    (11) bloque -> . OPENKEY estatuto CLOSEKEY

    OPENKEY         shift and go to state 8

    bloque                         shift and go to state 10

state 8

    (11) bloque -> OPENKEY . estatuto CLOSEKEY
    (12) estatuto -> . estatuto_2nd estatuto_3rd
    (13) estatuto_2nd -> . asignacion
    (14) estatuto_2nd -> . condicion
    (15) estatuto_2nd -> . escritura
    (18) asignacion -> . ID EQUAL expresion SEMICOLON
    (29) condicion -> . IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
    (24) escritura -> . PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON

    ID              shift and go to state 16
    IF              shift and go to state 17
    PRINT           shift and go to state 18

    estatuto                       shift and go to state 11
    estatuto_2nd                   shift and go to state 12
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    escritura                      shift and go to state 15

state 9

    (4) vars -> VAR . vars_2nd
    (5) vars_2nd -> . ID COMMA vars_2nd
    (6) vars_2nd -> . ID DOUBLEDOT tipo SEMICOLON vars_3rd

    ID              shift and go to state 20

    vars_2nd                       shift and go to state 19

state 10

    (3) program_2nd -> vars bloque .

    $end            reduce using rule 3 (program_2nd -> vars bloque .)


state 11

    (11) bloque -> OPENKEY estatuto . CLOSEKEY

    CLOSEKEY        shift and go to state 21


state 12

    (12) estatuto -> estatuto_2nd . estatuto_3rd
    (16) estatuto_3rd -> . empty
    (17) estatuto_3rd -> . estatuto
    (47) empty -> .
    (12) estatuto -> . estatuto_2nd estatuto_3rd
    (13) estatuto_2nd -> . asignacion
    (14) estatuto_2nd -> . condicion
    (15) estatuto_2nd -> . escritura
    (18) asignacion -> . ID EQUAL expresion SEMICOLON
    (29) condicion -> . IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
    (24) escritura -> . PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON

    CLOSEKEY        reduce using rule 47 (empty -> .)
    ID              shift and go to state 16
    IF              shift and go to state 17
    PRINT           shift and go to state 18

    estatuto_2nd                   shift and go to state 12
    estatuto_3rd                   shift and go to state 22
    empty                          shift and go to state 23
    estatuto                       shift and go to state 24
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    escritura                      shift and go to state 15

state 13

    (13) estatuto_2nd -> asignacion .

    ID              reduce using rule 13 (estatuto_2nd -> asignacion .)
    IF              reduce using rule 13 (estatuto_2nd -> asignacion .)
    PRINT           reduce using rule 13 (estatuto_2nd -> asignacion .)
    CLOSEKEY        reduce using rule 13 (estatuto_2nd -> asignacion .)


state 14

    (14) estatuto_2nd -> condicion .

    ID              reduce using rule 14 (estatuto_2nd -> condicion .)
    IF              reduce using rule 14 (estatuto_2nd -> condicion .)
    PRINT           reduce using rule 14 (estatuto_2nd -> condicion .)
    CLOSEKEY        reduce using rule 14 (estatuto_2nd -> condicion .)


state 15

    (15) estatuto_2nd -> escritura .

    ID              reduce using rule 15 (estatuto_2nd -> escritura .)
    IF              reduce using rule 15 (estatuto_2nd -> escritura .)
    PRINT           reduce using rule 15 (estatuto_2nd -> escritura .)
    CLOSEKEY        reduce using rule 15 (estatuto_2nd -> escritura .)


state 16

    (18) asignacion -> ID . EQUAL expresion SEMICOLON

    EQUAL           shift and go to state 25


state 17

    (29) condicion -> IF . OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON

    OPENPARENTHESIS shift and go to state 26


state 18

    (24) escritura -> PRINT . OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON

    OPENPARENTHESIS shift and go to state 27


state 19

    (4) vars -> VAR vars_2nd .

    OPENKEY         reduce using rule 4 (vars -> VAR vars_2nd .)


state 20

    (5) vars_2nd -> ID . COMMA vars_2nd
    (6) vars_2nd -> ID . DOUBLEDOT tipo SEMICOLON vars_3rd

    COMMA           shift and go to state 28
    DOUBLEDOT       shift and go to state 29


state 21

    (11) bloque -> OPENKEY estatuto CLOSEKEY .

    $end            reduce using rule 11 (bloque -> OPENKEY estatuto CLOSEKEY .)
    ELSE            reduce using rule 11 (bloque -> OPENKEY estatuto CLOSEKEY .)
    SEMICOLON       reduce using rule 11 (bloque -> OPENKEY estatuto CLOSEKEY .)


state 22

    (12) estatuto -> estatuto_2nd estatuto_3rd .

    CLOSEKEY        reduce using rule 12 (estatuto -> estatuto_2nd estatuto_3rd .)


state 23

    (16) estatuto_3rd -> empty .

    CLOSEKEY        reduce using rule 16 (estatuto_3rd -> empty .)


state 24

    (17) estatuto_3rd -> estatuto .

    CLOSEKEY        reduce using rule 17 (estatuto_3rd -> estatuto .)


state 25

    (18) asignacion -> ID EQUAL . expresion SEMICOLON
    (19) expresion -> . exp expresion_2nd
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    expresion                      shift and go to state 31
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 26

    (29) condicion -> IF OPENPARENTHESIS . expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON
    (19) expresion -> . exp expresion_2nd
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    expresion                      shift and go to state 41
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 27

    (24) escritura -> PRINT OPENPARENTHESIS . escritura_2nd CLOSEPARENTHESIS SEMICOLON
    (25) escritura_2nd -> . expresion escritura_3rd
    (26) escritura_2nd -> . CTE_STRING escritura_3rd
    (19) expresion -> . exp expresion_2nd
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    CTE_STRING      shift and go to state 44
    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    escritura_2nd                  shift and go to state 42
    expresion                      shift and go to state 43
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 28

    (5) vars_2nd -> ID COMMA . vars_2nd
    (5) vars_2nd -> . ID COMMA vars_2nd
    (6) vars_2nd -> . ID DOUBLEDOT tipo SEMICOLON vars_3rd

    ID              shift and go to state 20

    vars_2nd                       shift and go to state 45

state 29

    (6) vars_2nd -> ID DOUBLEDOT . tipo SEMICOLON vars_3rd
    (9) tipo -> . INTEGER
    (10) tipo -> . FLOATING

    INTEGER         shift and go to state 47
    FLOATING        shift and go to state 48

    tipo                           shift and go to state 46

state 30

    (44) var_cte -> ID .

    MULTIPLY        reduce using rule 44 (var_cte -> ID .)
    DIVIDE          reduce using rule 44 (var_cte -> ID .)
    PLUS            reduce using rule 44 (var_cte -> ID .)
    MINUS           reduce using rule 44 (var_cte -> ID .)
    LESSTHAN        reduce using rule 44 (var_cte -> ID .)
    MORETHAN        reduce using rule 44 (var_cte -> ID .)
    DIFFERENT       reduce using rule 44 (var_cte -> ID .)
    SEMICOLON       reduce using rule 44 (var_cte -> ID .)
    CLOSEPARENTHESIS reduce using rule 44 (var_cte -> ID .)
    COMMA           reduce using rule 44 (var_cte -> ID .)


state 31

    (18) asignacion -> ID EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 49


state 32

    (19) expresion -> exp . expresion_2nd
    (20) expresion_2nd -> . empty
    (21) expresion_2nd -> . LESSTHAN exp
    (22) expresion_2nd -> . MORETHAN exp
    (23) expresion_2nd -> . DIFFERENT exp
    (47) empty -> .

    LESSTHAN        shift and go to state 52
    MORETHAN        shift and go to state 53
    DIFFERENT       shift and go to state 54
    SEMICOLON       reduce using rule 47 (empty -> .)
    CLOSEPARENTHESIS reduce using rule 47 (empty -> .)
    COMMA           reduce using rule 47 (empty -> .)

    expresion_2nd                  shift and go to state 50
    empty                          shift and go to state 51

state 33

    (32) exp -> termino . exp_2nd
    (33) exp_2nd -> . empty
    (34) exp_2nd -> . PLUS exp
    (35) exp_2nd -> . MINUS exp
    (47) empty -> .

    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    LESSTHAN        reduce using rule 47 (empty -> .)
    MORETHAN        reduce using rule 47 (empty -> .)
    DIFFERENT       reduce using rule 47 (empty -> .)
    SEMICOLON       reduce using rule 47 (empty -> .)
    CLOSEPARENTHESIS reduce using rule 47 (empty -> .)
    COMMA           reduce using rule 47 (empty -> .)

    exp_2nd                        shift and go to state 55
    empty                          shift and go to state 56

state 34

    (36) termino -> factor . termino_2nd
    (37) termino_2nd -> . empty
    (38) termino_2nd -> . MULTIPLY termino
    (39) termino_2nd -> . DIVIDE termino
    (47) empty -> .

    MULTIPLY        shift and go to state 61
    DIVIDE          shift and go to state 62
    PLUS            reduce using rule 47 (empty -> .)
    MINUS           reduce using rule 47 (empty -> .)
    LESSTHAN        reduce using rule 47 (empty -> .)
    MORETHAN        reduce using rule 47 (empty -> .)
    DIFFERENT       reduce using rule 47 (empty -> .)
    SEMICOLON       reduce using rule 47 (empty -> .)
    CLOSEPARENTHESIS reduce using rule 47 (empty -> .)
    COMMA           reduce using rule 47 (empty -> .)

    termino_2nd                    shift and go to state 59
    empty                          shift and go to state 60

state 35

    (40) factor -> OPENPARENTHESIS . expresion CLOSEPARENTHESIS
    (19) expresion -> . exp expresion_2nd
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    expresion                      shift and go to state 63
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 36

    (41) factor -> var_cte .

    MULTIPLY        reduce using rule 41 (factor -> var_cte .)
    DIVIDE          reduce using rule 41 (factor -> var_cte .)
    PLUS            reduce using rule 41 (factor -> var_cte .)
    MINUS           reduce using rule 41 (factor -> var_cte .)
    LESSTHAN        reduce using rule 41 (factor -> var_cte .)
    MORETHAN        reduce using rule 41 (factor -> var_cte .)
    DIFFERENT       reduce using rule 41 (factor -> var_cte .)
    SEMICOLON       reduce using rule 41 (factor -> var_cte .)
    CLOSEPARENTHESIS reduce using rule 41 (factor -> var_cte .)
    COMMA           reduce using rule 41 (factor -> var_cte .)


state 37

    (42) factor -> PLUS . var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    var_cte                        shift and go to state 64

state 38

    (43) factor -> MINUS . var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    var_cte                        shift and go to state 65

state 39

    (45) var_cte -> CTE_INT .

    MULTIPLY        reduce using rule 45 (var_cte -> CTE_INT .)
    DIVIDE          reduce using rule 45 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 45 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 45 (var_cte -> CTE_INT .)
    LESSTHAN        reduce using rule 45 (var_cte -> CTE_INT .)
    MORETHAN        reduce using rule 45 (var_cte -> CTE_INT .)
    DIFFERENT       reduce using rule 45 (var_cte -> CTE_INT .)
    SEMICOLON       reduce using rule 45 (var_cte -> CTE_INT .)
    CLOSEPARENTHESIS reduce using rule 45 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 45 (var_cte -> CTE_INT .)


state 40

    (46) var_cte -> CTE_FLOAT .

    MULTIPLY        reduce using rule 46 (var_cte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 46 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 46 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 46 (var_cte -> CTE_FLOAT .)
    LESSTHAN        reduce using rule 46 (var_cte -> CTE_FLOAT .)
    MORETHAN        reduce using rule 46 (var_cte -> CTE_FLOAT .)
    DIFFERENT       reduce using rule 46 (var_cte -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 46 (var_cte -> CTE_FLOAT .)
    CLOSEPARENTHESIS reduce using rule 46 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 46 (var_cte -> CTE_FLOAT .)


state 41

    (29) condicion -> IF OPENPARENTHESIS expresion . CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON

    CLOSEPARENTHESIS shift and go to state 66


state 42

    (24) escritura -> PRINT OPENPARENTHESIS escritura_2nd . CLOSEPARENTHESIS SEMICOLON

    CLOSEPARENTHESIS shift and go to state 67


state 43

    (25) escritura_2nd -> expresion . escritura_3rd
    (27) escritura_3rd -> . empty
    (28) escritura_3rd -> . COMMA escritura_2nd
    (47) empty -> .

    COMMA           shift and go to state 70
    CLOSEPARENTHESIS reduce using rule 47 (empty -> .)

    escritura_3rd                  shift and go to state 68
    empty                          shift and go to state 69

state 44

    (26) escritura_2nd -> CTE_STRING . escritura_3rd
    (27) escritura_3rd -> . empty
    (28) escritura_3rd -> . COMMA escritura_2nd
    (47) empty -> .

    COMMA           shift and go to state 70
    CLOSEPARENTHESIS reduce using rule 47 (empty -> .)

    escritura_3rd                  shift and go to state 71
    empty                          shift and go to state 69

state 45

    (5) vars_2nd -> ID COMMA vars_2nd .

    OPENKEY         reduce using rule 5 (vars_2nd -> ID COMMA vars_2nd .)


state 46

    (6) vars_2nd -> ID DOUBLEDOT tipo . SEMICOLON vars_3rd

    SEMICOLON       shift and go to state 72


state 47

    (9) tipo -> INTEGER .

    SEMICOLON       reduce using rule 9 (tipo -> INTEGER .)


state 48

    (10) tipo -> FLOATING .

    SEMICOLON       reduce using rule 10 (tipo -> FLOATING .)


state 49

    (18) asignacion -> ID EQUAL expresion SEMICOLON .

    ID              reduce using rule 18 (asignacion -> ID EQUAL expresion SEMICOLON .)
    IF              reduce using rule 18 (asignacion -> ID EQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 18 (asignacion -> ID EQUAL expresion SEMICOLON .)
    CLOSEKEY        reduce using rule 18 (asignacion -> ID EQUAL expresion SEMICOLON .)


state 50

    (19) expresion -> exp expresion_2nd .

    SEMICOLON       reduce using rule 19 (expresion -> exp expresion_2nd .)
    CLOSEPARENTHESIS reduce using rule 19 (expresion -> exp expresion_2nd .)
    COMMA           reduce using rule 19 (expresion -> exp expresion_2nd .)


state 51

    (20) expresion_2nd -> empty .

    SEMICOLON       reduce using rule 20 (expresion_2nd -> empty .)
    CLOSEPARENTHESIS reduce using rule 20 (expresion_2nd -> empty .)
    COMMA           reduce using rule 20 (expresion_2nd -> empty .)


state 52

    (21) expresion_2nd -> LESSTHAN . exp
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    exp                            shift and go to state 73
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 53

    (22) expresion_2nd -> MORETHAN . exp
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    exp                            shift and go to state 74
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 54

    (23) expresion_2nd -> DIFFERENT . exp
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    exp                            shift and go to state 75
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 55

    (32) exp -> termino exp_2nd .

    LESSTHAN        reduce using rule 32 (exp -> termino exp_2nd .)
    MORETHAN        reduce using rule 32 (exp -> termino exp_2nd .)
    DIFFERENT       reduce using rule 32 (exp -> termino exp_2nd .)
    SEMICOLON       reduce using rule 32 (exp -> termino exp_2nd .)
    CLOSEPARENTHESIS reduce using rule 32 (exp -> termino exp_2nd .)
    COMMA           reduce using rule 32 (exp -> termino exp_2nd .)


state 56

    (33) exp_2nd -> empty .

    LESSTHAN        reduce using rule 33 (exp_2nd -> empty .)
    MORETHAN        reduce using rule 33 (exp_2nd -> empty .)
    DIFFERENT       reduce using rule 33 (exp_2nd -> empty .)
    SEMICOLON       reduce using rule 33 (exp_2nd -> empty .)
    CLOSEPARENTHESIS reduce using rule 33 (exp_2nd -> empty .)
    COMMA           reduce using rule 33 (exp_2nd -> empty .)


state 57

    (34) exp_2nd -> PLUS . exp
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    exp                            shift and go to state 76
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 58

    (35) exp_2nd -> MINUS . exp
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    exp                            shift and go to state 77
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 59

    (36) termino -> factor termino_2nd .

    PLUS            reduce using rule 36 (termino -> factor termino_2nd .)
    MINUS           reduce using rule 36 (termino -> factor termino_2nd .)
    LESSTHAN        reduce using rule 36 (termino -> factor termino_2nd .)
    MORETHAN        reduce using rule 36 (termino -> factor termino_2nd .)
    DIFFERENT       reduce using rule 36 (termino -> factor termino_2nd .)
    SEMICOLON       reduce using rule 36 (termino -> factor termino_2nd .)
    CLOSEPARENTHESIS reduce using rule 36 (termino -> factor termino_2nd .)
    COMMA           reduce using rule 36 (termino -> factor termino_2nd .)


state 60

    (37) termino_2nd -> empty .

    PLUS            reduce using rule 37 (termino_2nd -> empty .)
    MINUS           reduce using rule 37 (termino_2nd -> empty .)
    LESSTHAN        reduce using rule 37 (termino_2nd -> empty .)
    MORETHAN        reduce using rule 37 (termino_2nd -> empty .)
    DIFFERENT       reduce using rule 37 (termino_2nd -> empty .)
    SEMICOLON       reduce using rule 37 (termino_2nd -> empty .)
    CLOSEPARENTHESIS reduce using rule 37 (termino_2nd -> empty .)
    COMMA           reduce using rule 37 (termino_2nd -> empty .)


state 61

    (38) termino_2nd -> MULTIPLY . termino
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    termino                        shift and go to state 78
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 62

    (39) termino_2nd -> DIVIDE . termino
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    termino                        shift and go to state 79
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 63

    (40) factor -> OPENPARENTHESIS expresion . CLOSEPARENTHESIS

    CLOSEPARENTHESIS shift and go to state 80


state 64

    (42) factor -> PLUS var_cte .

    MULTIPLY        reduce using rule 42 (factor -> PLUS var_cte .)
    DIVIDE          reduce using rule 42 (factor -> PLUS var_cte .)
    PLUS            reduce using rule 42 (factor -> PLUS var_cte .)
    MINUS           reduce using rule 42 (factor -> PLUS var_cte .)
    LESSTHAN        reduce using rule 42 (factor -> PLUS var_cte .)
    MORETHAN        reduce using rule 42 (factor -> PLUS var_cte .)
    DIFFERENT       reduce using rule 42 (factor -> PLUS var_cte .)
    SEMICOLON       reduce using rule 42 (factor -> PLUS var_cte .)
    CLOSEPARENTHESIS reduce using rule 42 (factor -> PLUS var_cte .)
    COMMA           reduce using rule 42 (factor -> PLUS var_cte .)


state 65

    (43) factor -> MINUS var_cte .

    MULTIPLY        reduce using rule 43 (factor -> MINUS var_cte .)
    DIVIDE          reduce using rule 43 (factor -> MINUS var_cte .)
    PLUS            reduce using rule 43 (factor -> MINUS var_cte .)
    MINUS           reduce using rule 43 (factor -> MINUS var_cte .)
    LESSTHAN        reduce using rule 43 (factor -> MINUS var_cte .)
    MORETHAN        reduce using rule 43 (factor -> MINUS var_cte .)
    DIFFERENT       reduce using rule 43 (factor -> MINUS var_cte .)
    SEMICOLON       reduce using rule 43 (factor -> MINUS var_cte .)
    CLOSEPARENTHESIS reduce using rule 43 (factor -> MINUS var_cte .)
    COMMA           reduce using rule 43 (factor -> MINUS var_cte .)


state 66

    (29) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS . bloque condicion_2nd SEMICOLON
    (11) bloque -> . OPENKEY estatuto CLOSEKEY

    OPENKEY         shift and go to state 8

    bloque                         shift and go to state 81

state 67

    (24) escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 82


state 68

    (25) escritura_2nd -> expresion escritura_3rd .

    CLOSEPARENTHESIS reduce using rule 25 (escritura_2nd -> expresion escritura_3rd .)


state 69

    (27) escritura_3rd -> empty .

    CLOSEPARENTHESIS reduce using rule 27 (escritura_3rd -> empty .)


state 70

    (28) escritura_3rd -> COMMA . escritura_2nd
    (25) escritura_2nd -> . expresion escritura_3rd
    (26) escritura_2nd -> . CTE_STRING escritura_3rd
    (19) expresion -> . exp expresion_2nd
    (32) exp -> . termino exp_2nd
    (36) termino -> . factor termino_2nd
    (40) factor -> . OPENPARENTHESIS expresion CLOSEPARENTHESIS
    (41) factor -> . var_cte
    (42) factor -> . PLUS var_cte
    (43) factor -> . MINUS var_cte
    (44) var_cte -> . ID
    (45) var_cte -> . CTE_INT
    (46) var_cte -> . CTE_FLOAT

    CTE_STRING      shift and go to state 44
    OPENPARENTHESIS shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              shift and go to state 30
    CTE_INT         shift and go to state 39
    CTE_FLOAT       shift and go to state 40

    escritura_2nd                  shift and go to state 83
    expresion                      shift and go to state 43
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    var_cte                        shift and go to state 36

state 71

    (26) escritura_2nd -> CTE_STRING escritura_3rd .

    CLOSEPARENTHESIS reduce using rule 26 (escritura_2nd -> CTE_STRING escritura_3rd .)


state 72

    (6) vars_2nd -> ID DOUBLEDOT tipo SEMICOLON . vars_3rd
    (7) vars_3rd -> . empty
    (8) vars_3rd -> . vars_2nd
    (47) empty -> .
    (5) vars_2nd -> . ID COMMA vars_2nd
    (6) vars_2nd -> . ID DOUBLEDOT tipo SEMICOLON vars_3rd

    OPENKEY         reduce using rule 47 (empty -> .)
    ID              shift and go to state 20

    vars_3rd                       shift and go to state 84
    empty                          shift and go to state 85
    vars_2nd                       shift and go to state 86

state 73

    (21) expresion_2nd -> LESSTHAN exp .

    SEMICOLON       reduce using rule 21 (expresion_2nd -> LESSTHAN exp .)
    CLOSEPARENTHESIS reduce using rule 21 (expresion_2nd -> LESSTHAN exp .)
    COMMA           reduce using rule 21 (expresion_2nd -> LESSTHAN exp .)


state 74

    (22) expresion_2nd -> MORETHAN exp .

    SEMICOLON       reduce using rule 22 (expresion_2nd -> MORETHAN exp .)
    CLOSEPARENTHESIS reduce using rule 22 (expresion_2nd -> MORETHAN exp .)
    COMMA           reduce using rule 22 (expresion_2nd -> MORETHAN exp .)


state 75

    (23) expresion_2nd -> DIFFERENT exp .

    SEMICOLON       reduce using rule 23 (expresion_2nd -> DIFFERENT exp .)
    CLOSEPARENTHESIS reduce using rule 23 (expresion_2nd -> DIFFERENT exp .)
    COMMA           reduce using rule 23 (expresion_2nd -> DIFFERENT exp .)


state 76

    (34) exp_2nd -> PLUS exp .

    LESSTHAN        reduce using rule 34 (exp_2nd -> PLUS exp .)
    MORETHAN        reduce using rule 34 (exp_2nd -> PLUS exp .)
    DIFFERENT       reduce using rule 34 (exp_2nd -> PLUS exp .)
    SEMICOLON       reduce using rule 34 (exp_2nd -> PLUS exp .)
    CLOSEPARENTHESIS reduce using rule 34 (exp_2nd -> PLUS exp .)
    COMMA           reduce using rule 34 (exp_2nd -> PLUS exp .)


state 77

    (35) exp_2nd -> MINUS exp .

    LESSTHAN        reduce using rule 35 (exp_2nd -> MINUS exp .)
    MORETHAN        reduce using rule 35 (exp_2nd -> MINUS exp .)
    DIFFERENT       reduce using rule 35 (exp_2nd -> MINUS exp .)
    SEMICOLON       reduce using rule 35 (exp_2nd -> MINUS exp .)
    CLOSEPARENTHESIS reduce using rule 35 (exp_2nd -> MINUS exp .)
    COMMA           reduce using rule 35 (exp_2nd -> MINUS exp .)


state 78

    (38) termino_2nd -> MULTIPLY termino .

    PLUS            reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    MINUS           reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    LESSTHAN        reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    MORETHAN        reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    DIFFERENT       reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    SEMICOLON       reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    CLOSEPARENTHESIS reduce using rule 38 (termino_2nd -> MULTIPLY termino .)
    COMMA           reduce using rule 38 (termino_2nd -> MULTIPLY termino .)


state 79

    (39) termino_2nd -> DIVIDE termino .

    PLUS            reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    MINUS           reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    LESSTHAN        reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    MORETHAN        reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    DIFFERENT       reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    SEMICOLON       reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    CLOSEPARENTHESIS reduce using rule 39 (termino_2nd -> DIVIDE termino .)
    COMMA           reduce using rule 39 (termino_2nd -> DIVIDE termino .)


state 80

    (40) factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .

    MULTIPLY        reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    DIVIDE          reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    PLUS            reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    MINUS           reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    LESSTHAN        reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    MORETHAN        reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    DIFFERENT       reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    SEMICOLON       reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    CLOSEPARENTHESIS reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)
    COMMA           reduce using rule 40 (factor -> OPENPARENTHESIS expresion CLOSEPARENTHESIS .)


state 81

    (29) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque . condicion_2nd SEMICOLON
    (30) condicion_2nd -> . empty
    (31) condicion_2nd -> . ELSE bloque
    (47) empty -> .

    ELSE            shift and go to state 89
    SEMICOLON       reduce using rule 47 (empty -> .)

    condicion_2nd                  shift and go to state 87
    empty                          shift and go to state 88

state 82

    (24) escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .

    ID              reduce using rule 24 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)
    IF              reduce using rule 24 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 24 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)
    CLOSEKEY        reduce using rule 24 (escritura -> PRINT OPENPARENTHESIS escritura_2nd CLOSEPARENTHESIS SEMICOLON .)


state 83

    (28) escritura_3rd -> COMMA escritura_2nd .

    CLOSEPARENTHESIS reduce using rule 28 (escritura_3rd -> COMMA escritura_2nd .)


state 84

    (6) vars_2nd -> ID DOUBLEDOT tipo SEMICOLON vars_3rd .

    OPENKEY         reduce using rule 6 (vars_2nd -> ID DOUBLEDOT tipo SEMICOLON vars_3rd .)


state 85

    (7) vars_3rd -> empty .

    OPENKEY         reduce using rule 7 (vars_3rd -> empty .)


state 86

    (8) vars_3rd -> vars_2nd .

    OPENKEY         reduce using rule 8 (vars_3rd -> vars_2nd .)


state 87

    (29) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd . SEMICOLON

    SEMICOLON       shift and go to state 90


state 88

    (30) condicion_2nd -> empty .

    SEMICOLON       reduce using rule 30 (condicion_2nd -> empty .)


state 89

    (31) condicion_2nd -> ELSE . bloque
    (11) bloque -> . OPENKEY estatuto CLOSEKEY

    OPENKEY         shift and go to state 8

    bloque                         shift and go to state 91

state 90

    (29) condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .

    ID              reduce using rule 29 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)
    IF              reduce using rule 29 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)
    PRINT           reduce using rule 29 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)
    CLOSEKEY        reduce using rule 29 (condicion -> IF OPENPARENTHESIS expresion CLOSEPARENTHESIS bloque condicion_2nd SEMICOLON .)


state 91

    (31) condicion_2nd -> ELSE bloque .

    SEMICOLON       reduce using rule 31 (condicion_2nd -> ELSE bloque .)

